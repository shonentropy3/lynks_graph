type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  contract: Bytes! # address
}


type TransferMint @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  transactionHash: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  contract: Bytes! # address
}

type TransferBuy @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  transactionHash: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  contract: Bytes! # address
}

type TransferBatch @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  ids: [BigInt!]! # uint256[]
  values: [BigInt!]! # uint256[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferBatchMint @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  ids: [BigInt!]! # uint256[]
  values: [BigInt!]! # uint256[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferBatchBuy @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  ids: [BigInt!]! # uint256[]
  values: [BigInt!]! # uint256[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LynksBalance @entity {
  id: Bytes!
  address: Bytes!
  balance: BigInt!
}

type MysteryBox1Balance @entity {
  id: Bytes!
  address: Bytes!
  balance: BigInt!
}

type MysteryBox2Balance @entity {
  id: Bytes!
  address: Bytes!
  balance: BigInt!
}

type LynksAmount @entity {
  id: Bytes!
  address: Bytes!
  transferAmountIn: BigInt!
  transferAmountOut: BigInt!
  mintAmount: BigInt!
  buyAmount: BigInt!
}

type MysteryBox1Amount @entity {
  id: Bytes!
  address: Bytes!
  transferAmountIn: BigInt!
  transferAmountOut: BigInt!
  mintAmount: BigInt!
  buyAmount: BigInt!
}

type MysteryBox2Amount @entity {
  id: Bytes!
  address: Bytes!
  transferAmountIn: BigInt!
  transferAmountOut: BigInt!
  mintAmount: BigInt!
  buyAmount: BigInt!
}

type TrademarkBalance @entity {
  id: Bytes! # address + trademark_id
  address: Bytes!
  balance: BigInt!
  trademark_id: BigInt! # uint256
}

type TrademarkAmount @entity {
  id: Bytes!
  address: Bytes!
  transferAmountIn: BigInt!
  transferAmountOut: BigInt!
  mintAmount: BigInt!
  buyAmount: BigInt!
  trademark_id: BigInt!
}

type TransferSingle @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  trademark_id: BigInt! # uint256
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferSingleMint @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  trademark_id: BigInt! # uint256
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferSingleBuy @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  trademark_id: BigInt! # uint256
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Boost1Balance @entity {
  id: Bytes! # address + trademark_id
  address: Bytes!
  balance3: BigInt!
  balance4: BigInt!
  balance100: BigInt!
  balance300: BigInt!
  balance500: BigInt!
  balance1000: BigInt!
  balance2000: BigInt!
}

type Boost2Balance @entity {
  id: Bytes! # address + trademark_id
  address: Bytes!
  balance50: BigInt!
  balance100: BigInt!
  balance200: BigInt!
  balance500: BigInt!
  balance1000: BigInt!
}
